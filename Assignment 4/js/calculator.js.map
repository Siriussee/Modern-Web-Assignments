{"version":3,"sources":["calculator.js"],"names":["limitedEval","a","degrees","lev","calculator","data","console","log","Error","replace","result","length","toPrecision","exception","alert","math","config","number","eval","import","ln","parse","simplify","derivative","override","init","numOfLeft","document","autoFill","isRes","addFunc","funcName","opr","fom","textContent","callback","removeClass","addClass","$","undefined","setTimeout","addOperator","getElementById","res","fade","click","isNaN","this","reset","substr"],"mappings":"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","file":"calculator.js","sourcesContent":["/*jshint esversion: 6*/\n/*High Accuracy Algorithm Supported*/\n/*Scientific Calculation Supported*/\n/*Non-server version*/\n\nmath.config({\n  number: 'BigNumber'\n});\n\nvar limitedEval = math.eval;\n\nfunction ln(a) {\n  return limitedEval(\"log(\" + a + \")/log(e)\");\n}\n\nfunction degrees(a) {\n  return limitedEval(a + \"deg\");\n}\n\nfunction lev(a){\n  return limitedEval(a + \"!\");\n}\n\nmath.import({\n  ln: ln,\n  degrees: degrees,\n  lev: lev\n});// config of mathjs\n\nmath.import({\n  'import':     function () { throw new Error('Function import is disabled') },\n  'createUnit': function () { throw new Error('Function createUnit is disabled') },\n  'eval':       function () { throw new Error('Function eval is disabled') },\n  'parse':      function () { throw new Error('Function parse is disabled') },\n  'simplify':   function () { throw new Error('Function simplify is disabled') },\n  'derivative': function () { throw new Error('Function derivative is disabled') }\n}, {override: true});// To prevent from XSS attack\n\nfunction calculator(data){\n  console.log(data);\n  if(data == \"INVALID\"){\n    return \"INVALID\";\n  }\n  data = data.replace(/π/g, \"pi\");\n  try{\n    let result = limitedEval(data);\n    if((result + \"\").length > 17)\n      return result.toPrecision(16) + \"\";\n    else\n      return result + \"\";\n  }\n  catch(exception){\n    alert('What you typed in is not a valid formula, please try again');\n    return \"INVALID\";\n  }\n}\n\n$(document).ready(function () {\n  let numOfLeft = 0;\n  let isRes = false;\n  let fom = document.getElementById('equation'), \n    res = document.getElementById('result');\n\n  function init() {\n    numOfLeft = 0;\n  }\n\n  function autoFill(){\n    for(;numOfLeft > 0; --numOfLeft)\n      fom.textContent += \")\";\n  }\n\n  function addFunc(funcName){\n    ++numOfLeft;\n    fom.textContent += funcName + \"(\";\n  }\n\n  function addOperator(opr){\n    fom.textContent += opr;\n  }\n\n  $('#result').addClass('s0').addClass('animation');\n  $('#equation').addClass('s1').addClass('animation');\n\n  function reset(callback) {\n    $('#equation').removeClass('animation').removeClass('s0').addClass('s1');\n    $('#result').removeClass('animation').removeClass('s1').addClass('s0');\n    if (callback != undefined)\n      setTimeout(callback, 50);\n  }\n\n  let fade = function () {\n    $('#equation').removeClass('s1').addClass('animation').addClass('s0');\n    $('#result').removeClass('s0').addClass('animation').addClass('s1');\n  };\n\n  $('.button').click(function () {\n    reset(undefined);\n    if(isNaN(this.textContent)){\n      if(isRes){\n        if(res.textContent == \"INVALID\")\n          fom.textContent = \"\";\n        else\n          fom.textContent = res.textContent;\n        isRes = false;\n      }\n      switch (this.textContent) {\n        case \"---\":\n          break;\n        case 'CE':\n          fom.textContent = \"\";\n          init();\n          break;\n        case '(':\n          ++numOfLeft;\n          fom.textContent += \"(\";\n          break;\n        case ')':\n          if(numOfLeft > 0){\n            --numOfLeft;\n            fom.textContent += \")\";\n          }\n          break;\n        case 'Del':\n          if(fom.textContent != \"\")\n            fom.textContent = fom.textContent.substr(0, fom.textContent.length - 1);\n          break;\n        case \"n!\":\n          addFunc(\"lev\");\n          break;\n        case \"deg\":\n          addFunc(\"degrees\");\n          break;\n        case \"sin\": case \"cos\": case \"tan\":\n        case \"asin\": case \"acos\": case \"atan\":\n        case \"ln\": case \"log\":\n          addFunc(this.textContent);\n          break;\n        case \"x^y\":\n          addOperator(\"^\");\n          break;\n        case \"π\":\n          fom.textContent += \"π\";\n          break;\n        case \"e\":\n          fom.textContent += \"e\";\n          break;\n        case \"=\":\n          autoFill();\n          init();\n          res.textContent = calculator(fom.textContent);\n          reset(fade);\n          isRes = true;\n          break;\n\n        default:\n          addOperator(this.textContent);\n          break;\n      }\n    }\n    else{\n      if(isRes){\n        fom.textContent = \"\";\n        isRes = false;\n      }\n      fom.textContent += this.textContent;\n    }\n  });\n});"]}