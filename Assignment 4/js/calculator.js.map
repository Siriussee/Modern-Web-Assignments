{"version":3,"sources":["calculator.js"],"names":["limitedEval","a","degrees","lev","calculator","data","console","log","Error","replace","result","length","toPrecision","alert","math","config","number","eval","import","ln","parse","simplify","derivative","override","$","document","init","numOfLeft","isRes","fom","getElementById","funcName","textContent","opr","removeClass","addClass","addOperator","callback","exception","addFunc","fade","click","reset","isNaN","this","res","undefined","substr","autoFill"],"mappings":"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","file":"calculator.js","sourcesContent":["/*jshint esversion: 6*/\n/*High Accuracy Algorithm Supported*/\n/*Scientific Calculation Supported*/\n/*Non-server version*/\n\nmath.config({\n  number: 'BigNumber'\n});\n\nvar limitedEval = math.eval;\n\nfunction ln(a) {\n  return limitedEval(\"log(\" + a + \")/log(e)\");\n}\n\nfunction degrees(a) {\n  return limitedEval(a + \"deg\");\n}\n\nfunction lev(a){\n  return limitedEval(a + \"!\");\n}\n\nmath.import({\n  ln: ln,\n  degrees: degrees,\n  lev: lev\n});// config of mathjs\n\nmath.import({\n  'import':     function () { throw new Error('Function import is disabled') },\n  'createUnit': function () { throw new Error('Function createUnit is disabled') },\n  'eval':       function () { throw new Error('Function eval is disabled') },\n  'parse':      function () { throw new Error('Function parse is disabled') },\n  'simplify':   function () { throw new Error('Function simplify is disabled') },\n  'derivative': function () { throw new Error('Function derivative is disabled') }\n}, {override: true});// To prevent from XSS attack\n\nfunction calculator(data){\n  console.log(\"Calculating: \" + data);\n  if(data == \"INVALID\"){\n    return \"INVALID\";\n  }\n  data = data.replace(/π/g, \"pi\");\n  try{\n    if(data == \"\")\n      return \"\";\n    let result = limitedEval(data);\n    if((result + \"\").length > 17)\n      return result.toPrecision(16) + \"\";\n    else\n      return result + \"\";\n  }\n  catch(exception){\n    alert('What you typed in is not a valid formula, please try again');\n    return \"INVALID\";\n  }\n}\n\n$(document).ready(function () {\n  let numOfLeft = 0;\n  let isRes = false;\n  let fom = document.getElementById('equation'), \n    res = document.getElementById('result');\n\n  function init() {\n    numOfLeft = 0;\n  }\n\n  function autoFill(){\n    for(;numOfLeft > 0; --numOfLeft)\n      fom.textContent += \")\";\n  }\n\n  function addFunc(funcName){\n    ++numOfLeft;\n    fom.textContent += funcName + \"(\";\n  }\n\n  function addOperator(opr){\n    fom.textContent += opr;\n  }\n\n  $('#result').addClass('s0').addClass('animation');\n  $('#equation').addClass('s1').addClass('animation');\n\n  function reset(callback) {\n    $('#equation').removeClass('animation').removeClass('s0').addClass('s1');\n    $('#result').removeClass('animation').removeClass('s1').addClass('s0');\n    if (callback != undefined)\n      setTimeout(callback, 50);\n  }\n\n  let fade = function () {\n    $('#equation').removeClass('s1').addClass('animation').addClass('s0');\n    $('#result').removeClass('s0').addClass('animation').addClass('s1');\n  };\n\n  $('.button').click(function () {\n    reset(undefined);\n    if(isNaN(this.textContent)){\n      if(isRes){\n        if(res.textContent == \"INVALID\")\n          fom.textContent = \"\";\n        else\n          fom.textContent = res.textContent;\n        isRes = false;\n      }\n      switch (this.textContent) {\n        case \"---\":\n          break;\n        case 'CE':\n          fom.textContent = \"\";\n          init();\n          break;\n        case '(':\n          ++numOfLeft;\n          fom.textContent += \"(\";\n          break;\n        case ')':\n          if(numOfLeft > 0){\n            --numOfLeft;\n            fom.textContent += \")\";\n          }\n          break;\n        case 'Del':\n          if(fom.textContent != \"\")\n            fom.textContent = fom.textContent.substr(0, fom.textContent.length - 1);\n          break;\n        case \"n!\":\n          addFunc(\"lev\");\n          break;\n        case \"deg\":\n          addFunc(\"degrees\");\n          break;\n        case \"sin\": case \"cos\": case \"tan\":\n        case \"asin\": case \"acos\": case \"atan\":\n        case \"ln\": case \"log\":\n          addFunc(this.textContent);\n          break;\n        case \"x^y\":\n          addOperator(\"^\");\n          break;\n        case \"π\":\n          fom.textContent += \"π\";\n          break;\n        case \"e\":\n          fom.textContent += \"e\";\n          break;\n        case \"=\":\n          autoFill();\n          init();\n          res.textContent = calculator(fom.textContent);\n          reset(fade);\n          isRes = true;\n          break;\n\n        default:\n          addOperator(this.textContent);\n          break;\n      }\n    }\n    else{\n      if(isRes){\n        fom.textContent = \"\";\n        isRes = false;\n      }\n      fom.textContent += this.textContent;\n    }\n  });\n});"]}